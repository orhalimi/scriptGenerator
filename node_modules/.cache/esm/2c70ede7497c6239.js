let Splitter,helpers;_497‍.w("./splitter",[["default",["Splitter"],function(v){Splitter=v}]]);_497‍.w("./helpers",[["default",["helpers"],function(v){helpers=v}]]);const json = require('./tamplates/exampleSimple.json');



function createExeFiles(config, input =[]) {
    // try {
        const {        
            experimentTask,
            experimentParam,
            experimentValues,
        } = helpers.getExperiment(config)

        const splitter = new Splitter(config)
        splitter.splitTasks();
        if(experimentTask) splitter.insertExperimentData({experimentTask, experimentParam, experimentValues})
        // console.log(splitter.individualTasks);
        for (let gId in splitter.taskGraphs){
            _497‍.g.console.log(splitter.taskGraphs[gId]._experimentMembers)
            // console.log(splitter.taskGraphs[gId]._graph.adjacent("B"));
            // console.log(splitter.taskGraphs[gId]._graph.adjacent("C"));
            // console.log(splitter.taskGraphs[gId]._graph.adjacent("D"));
            break;
            // console.log(gId + ";")
            // console.log(splitter.taskGraphs[gId].serialize())
        }


    // } catch (e) {
    //     console.log('error:' + e)
    // }
}


createExeFiles(json, ['x'])